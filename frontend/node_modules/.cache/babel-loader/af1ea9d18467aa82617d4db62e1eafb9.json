{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport useList from '../useList';\nimport { useCompoundParent } from '../utils/useCompound';\nimport menuReducer from './menuReducer';\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/#hooks)\n *\n * API:\n *\n * - [useMenu API](https://mui.com/base-ui/react-menu/hooks-api/#use-menu)\n */\n\nexport default function useMenu() {\n  let parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    defaultOpen,\n    listboxRef: listboxRefProp,\n    open: openProp,\n    onItemsChange,\n    onOpenChange\n  } = parameters;\n  const listboxRef = React.useRef(null);\n  const handleRef = useForkRef(listboxRef, listboxRefProp);\n  const {\n    subitems,\n    contextValue: compoundComponentContextValue\n  } = useCompoundParent();\n  const subitemKeys = React.useMemo(() => Array.from(subitems.keys()), [subitems]);\n  const getItemDomElement = React.useCallback(itemId => {\n    var _subitems$get$ref$cur, _subitems$get;\n\n    if (itemId == null) {\n      return null;\n    }\n\n    return (_subitems$get$ref$cur = (_subitems$get = subitems.get(itemId)) == null ? void 0 : _subitems$get.ref.current) != null ? _subitems$get$ref$cur : null;\n  }, [subitems]);\n  const controlledProps = React.useMemo(() => ({\n    open: openProp\n  }), [openProp]);\n  const stateChangeHandler = React.useCallback((event, field, fieldValue, reason, state) => {\n    if (field === 'open') {\n      onOpenChange == null ? void 0 : onOpenChange(fieldValue);\n\n      if (fieldValue === true && state.highlightedValue !== null) {\n        var _subitems$get2;\n\n        (_subitems$get2 = subitems.get(state.highlightedValue)) == null || (_subitems$get2 = _subitems$get2.ref.current) == null ? void 0 : _subitems$get2.focus();\n      }\n    }\n  }, [onOpenChange, subitems]);\n  const {\n    dispatch,\n    getRootProps,\n    contextValue: listContextValue,\n    state: {\n      open,\n      highlightedValue\n    },\n    rootRef: mergedListRef\n  } = useList({\n    controlledProps,\n    disabledItemsFocusable: true,\n    focusManagement: 'DOM',\n    getItemDomElement,\n    getInitialState: () => ({\n      selectedValues: [],\n      highlightedValue: null,\n      open: defaultOpen != null ? defaultOpen : false\n    }),\n    isItemDisabled: id => {\n      var _subitems$get3;\n\n      return (subitems == null || (_subitems$get3 = subitems.get(id)) == null ? void 0 : _subitems$get3.disabled) || false;\n    },\n    items: subitemKeys,\n    getItemAsString: id => {\n      var _subitems$get4, _subitems$get5;\n\n      return ((_subitems$get4 = subitems.get(id)) == null ? void 0 : _subitems$get4.label) || ((_subitems$get5 = subitems.get(id)) == null || (_subitems$get5 = _subitems$get5.ref.current) == null ? void 0 : _subitems$get5.innerText);\n    },\n    rootRef: handleRef,\n    onItemsChange,\n    onStateChange: stateChangeHandler,\n    reducerActionContext: {\n      listboxRef\n    },\n    selectionMode: 'none',\n    stateReducer: menuReducer\n  });\n  React.useEffect(() => {\n    if (open && highlightedValue === subitemKeys[0]) {\n      var _subitems$get6;\n\n      (_subitems$get6 = subitems.get(subitemKeys[0])) == null || (_subitems$get6 = _subitems$get6.ref) == null || (_subitems$get6 = _subitems$get6.current) == null ? void 0 : _subitems$get6.focus();\n    }\n  }, [open, highlightedValue, subitems, subitemKeys]);\n  React.useEffect(() => {\n    var _listboxRef$current; // set focus to the highlighted item (but prevent stealing focus from other elements on the page)\n\n\n    if ((_listboxRef$current = listboxRef.current) != null && _listboxRef$current.contains(document.activeElement) && highlightedValue !== null) {\n      var _subitems$get7;\n\n      subitems == null || (_subitems$get7 = subitems.get(highlightedValue)) == null || (_subitems$get7 = _subitems$get7.ref.current) == null ? void 0 : _subitems$get7.focus();\n    }\n  }, [highlightedValue, subitems]);\n\n  const getListboxProps = function () {\n    let otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const rootProps = getRootProps(otherHandlers);\n    return _extends({}, otherHandlers, rootProps, {\n      role: 'menu'\n    });\n  };\n\n  React.useDebugValue({\n    subitems,\n    highlightedValue\n  });\n  return {\n    contextValue: _extends({}, compoundComponentContextValue, listContextValue),\n    dispatch,\n    getListboxProps,\n    highlightedValue,\n    listboxRef: mergedListRef,\n    menuItems: subitems,\n    open\n  };\n}","map":{"version":3,"sources":["/home/fpftech/fpf/vic/curso-react/react-integrando-apis/frontend/node_modules/@mui/base/useMenu/useMenu.js"],"names":["_extends","React","unstable_useForkRef","useForkRef","useList","useCompoundParent","menuReducer","useMenu","parameters","defaultOpen","listboxRef","listboxRefProp","open","openProp","onItemsChange","onOpenChange","useRef","handleRef","subitems","contextValue","compoundComponentContextValue","subitemKeys","useMemo","Array","from","keys","getItemDomElement","useCallback","itemId","_subitems$get$ref$cur","_subitems$get","get","ref","current","controlledProps","stateChangeHandler","event","field","fieldValue","reason","state","highlightedValue","_subitems$get2","focus","dispatch","getRootProps","listContextValue","rootRef","mergedListRef","disabledItemsFocusable","focusManagement","getInitialState","selectedValues","isItemDisabled","id","_subitems$get3","disabled","items","getItemAsString","_subitems$get4","_subitems$get5","label","innerText","onStateChange","reducerActionContext","selectionMode","stateReducer","useEffect","_subitems$get6","_listboxRef$current","contains","document","activeElement","_subitems$get7","getListboxProps","otherHandlers","rootProps","role","useDebugValue","menuItems"],"mappings":"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","sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport useList from '../useList';\nimport { useCompoundParent } from '../utils/useCompound';\nimport menuReducer from './menuReducer';\n\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/#hooks)\n *\n * API:\n *\n * - [useMenu API](https://mui.com/base-ui/react-menu/hooks-api/#use-menu)\n */\nexport default function useMenu(parameters = {}) {\n  const {\n    defaultOpen,\n    listboxRef: listboxRefProp,\n    open: openProp,\n    onItemsChange,\n    onOpenChange\n  } = parameters;\n  const listboxRef = React.useRef(null);\n  const handleRef = useForkRef(listboxRef, listboxRefProp);\n  const {\n    subitems,\n    contextValue: compoundComponentContextValue\n  } = useCompoundParent();\n  const subitemKeys = React.useMemo(() => Array.from(subitems.keys()), [subitems]);\n  const getItemDomElement = React.useCallback(itemId => {\n    var _subitems$get$ref$cur, _subitems$get;\n    if (itemId == null) {\n      return null;\n    }\n    return (_subitems$get$ref$cur = (_subitems$get = subitems.get(itemId)) == null ? void 0 : _subitems$get.ref.current) != null ? _subitems$get$ref$cur : null;\n  }, [subitems]);\n  const controlledProps = React.useMemo(() => ({\n    open: openProp\n  }), [openProp]);\n  const stateChangeHandler = React.useCallback((event, field, fieldValue, reason, state) => {\n    if (field === 'open') {\n      onOpenChange == null ? void 0 : onOpenChange(fieldValue);\n      if (fieldValue === true && state.highlightedValue !== null) {\n        var _subitems$get2;\n        (_subitems$get2 = subitems.get(state.highlightedValue)) == null || (_subitems$get2 = _subitems$get2.ref.current) == null ? void 0 : _subitems$get2.focus();\n      }\n    }\n  }, [onOpenChange, subitems]);\n  const {\n    dispatch,\n    getRootProps,\n    contextValue: listContextValue,\n    state: {\n      open,\n      highlightedValue\n    },\n    rootRef: mergedListRef\n  } = useList({\n    controlledProps,\n    disabledItemsFocusable: true,\n    focusManagement: 'DOM',\n    getItemDomElement,\n    getInitialState: () => ({\n      selectedValues: [],\n      highlightedValue: null,\n      open: defaultOpen != null ? defaultOpen : false\n    }),\n    isItemDisabled: id => {\n      var _subitems$get3;\n      return (subitems == null || (_subitems$get3 = subitems.get(id)) == null ? void 0 : _subitems$get3.disabled) || false;\n    },\n    items: subitemKeys,\n    getItemAsString: id => {\n      var _subitems$get4, _subitems$get5;\n      return ((_subitems$get4 = subitems.get(id)) == null ? void 0 : _subitems$get4.label) || ((_subitems$get5 = subitems.get(id)) == null || (_subitems$get5 = _subitems$get5.ref.current) == null ? void 0 : _subitems$get5.innerText);\n    },\n    rootRef: handleRef,\n    onItemsChange,\n    onStateChange: stateChangeHandler,\n    reducerActionContext: {\n      listboxRef\n    },\n    selectionMode: 'none',\n    stateReducer: menuReducer\n  });\n  React.useEffect(() => {\n    if (open && highlightedValue === subitemKeys[0]) {\n      var _subitems$get6;\n      (_subitems$get6 = subitems.get(subitemKeys[0])) == null || (_subitems$get6 = _subitems$get6.ref) == null || (_subitems$get6 = _subitems$get6.current) == null ? void 0 : _subitems$get6.focus();\n    }\n  }, [open, highlightedValue, subitems, subitemKeys]);\n  React.useEffect(() => {\n    var _listboxRef$current;\n    // set focus to the highlighted item (but prevent stealing focus from other elements on the page)\n    if ((_listboxRef$current = listboxRef.current) != null && _listboxRef$current.contains(document.activeElement) && highlightedValue !== null) {\n      var _subitems$get7;\n      subitems == null || (_subitems$get7 = subitems.get(highlightedValue)) == null || (_subitems$get7 = _subitems$get7.ref.current) == null ? void 0 : _subitems$get7.focus();\n    }\n  }, [highlightedValue, subitems]);\n  const getListboxProps = (otherHandlers = {}) => {\n    const rootProps = getRootProps(otherHandlers);\n    return _extends({}, otherHandlers, rootProps, {\n      role: 'menu'\n    });\n  };\n  React.useDebugValue({\n    subitems,\n    highlightedValue\n  });\n  return {\n    contextValue: _extends({}, compoundComponentContextValue, listContextValue),\n    dispatch,\n    getListboxProps,\n    highlightedValue,\n    listboxRef: mergedListRef,\n    menuItems: subitems,\n    open\n  };\n}"]},"metadata":{},"sourceType":"module"}