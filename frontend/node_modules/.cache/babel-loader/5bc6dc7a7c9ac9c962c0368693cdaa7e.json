{"ast":null,"code":"var _jsxFileName = \"/home/fpftech/fpf/vic/curso-react/react-integrando-apis/frontend/src/paginas/Admin/FormularioRestaurante.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, TextField, Typography } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport http from '../../http';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FormularioRestaurante() {\n  _s();\n\n  const [nomeRestaurante, setNomeRestaurante] = useState('');\n  const parametros = useParams();\n  useEffect(() => {\n    if (parametros.id) {\n      http.get(`restaurantes/${parametros.id}/`).then(res => {\n        setNomeRestaurante(res.data.nome);\n      });\n    }\n  }, []);\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    if (parametros.id) {\n      http.put(`restaurantes/${parametros.id}/`, {\n        nome: nomeRestaurante\n      }).then(() => {\n        alert(\"Restaurante atualizado com sucesso!\");\n      });\n    } else {\n      http.post('restaurantes/', {\n        nome: nomeRestaurante\n      }).then(() => {\n        alert(\"Restaurante cadastrado com sucesso!\");\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        flexGrow: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h6\",\n        children: \"Formul\\xE1rio Restaurantes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        sx: {\n          width: '100%'\n        },\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          value: nomeRestaurante,\n          id: \"standard-basic\",\n          label: \"Nome do Restaurante\",\n          variant: \"standard\",\n          onChange: event => setNomeRestaurante(event.target.value),\n          fullWidth: true,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"outlined\",\n          fullWidth: true,\n          sx: {\n            marginTop: 1\n          },\n          children: \"Salvar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(FormularioRestaurante, \"jPyYWeKkefbfsB+hH6PdxRNgvCo=\", false, function () {\n  return [useParams];\n});\n\n_c = FormularioRestaurante;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormularioRestaurante\");","map":{"version":3,"sources":["/home/fpftech/fpf/vic/curso-react/react-integrando-apis/frontend/src/paginas/Admin/FormularioRestaurante.tsx"],"names":["Box","Button","TextField","Typography","React","useEffect","useState","useParams","http","FormularioRestaurante","nomeRestaurante","setNomeRestaurante","parametros","id","get","then","res","data","nome","onSubmit","event","preventDefault","put","alert","post","display","flexDirection","alignItems","flexGrow","width","target","value","marginTop"],"mappings":";;;AAAA,SAAiBA,GAAjB,EAAsBC,MAAtB,EAAsDC,SAAtD,EAA0EC,UAA1E,QAA4F,eAA5F;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,IAAP,MAAiB,YAAjB;;;AAGA,eAAe,SAASC,qBAAT,GAAiC;AAAA;;AAC5C,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCL,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAMM,UAAU,GAAGL,SAAS,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIO,UAAU,CAACC,EAAf,EAAmB;AACfL,MAAAA,IAAI,CAACM,GAAL,CAAwB,gBAAeF,UAAU,CAACC,EAAG,GAArD,EACKE,IADL,CACUC,GAAG,IAAI;AACTL,QAAAA,kBAAkB,CAACK,GAAG,CAACC,IAAJ,CAASC,IAAV,CAAlB;AACH,OAHL;AAIH;AACJ,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMC,QAAQ,GAAIC,KAAD,IAA6C;AAC1DA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAIT,UAAU,CAACC,EAAf,EAAmB;AACfL,MAAAA,IAAI,CAACc,GAAL,CAAU,gBAAeV,UAAU,CAACC,EAAG,GAAvC,EAA2C;AACvCK,QAAAA,IAAI,EAAER;AADiC,OAA3C,EAGCK,IAHD,CAGM,MAAM;AACRQ,QAAAA,KAAK,CAAC,qCAAD,CAAL;AACH,OALD;AAKG,KANP,MAOK;AACDf,MAAAA,IAAI,CAACgB,IAAL,CAAU,eAAV,EAA2B;AACvBN,QAAAA,IAAI,EAAER;AADiB,OAA3B,EAGCK,IAHD,CAGM,MAAM;AACRQ,QAAAA,KAAK,CAAC,qCAAD,CAAL;AACH,OALD;AAMH;AACJ,GAlBD;;AAoBF,sBACE;AAAA,2BACI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAACE,QAAAA,OAAO,EAAC,MAAT;AAAiBC,QAAAA,aAAa,EAAC,QAA/B;AAAyCC,QAAAA,UAAU,EAAC,QAApD;AAA8DC,QAAAA,QAAQ,EAAE;AAAxE,OAAT;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,SAAS,EAAC,IAAtB;AAA2B,QAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,EAAE,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAA1B;AAA6C,QAAA,QAAQ,EAAEV,QAAvD;AAAA,gCACI,QAAC,SAAD;AACI,UAAA,KAAK,EAAET,eADX;AAEI,UAAA,EAAE,EAAC,gBAFP;AAGI,UAAA,KAAK,EAAC,qBAHV;AAII,UAAA,OAAO,EAAC,UAJZ;AAKI,UAAA,QAAQ,EAAEU,KAAK,IAAIT,kBAAkB,CAACS,KAAK,CAACU,MAAN,CAAaC,KAAd,CALzC;AAMI,UAAA,SAAS,MANb;AAOI,UAAA,QAAQ;AAPZ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAUI,QAAC,MAAD;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,OAAO,EAAC,UAFZ;AAGI,UAAA,SAAS,MAHb;AAII,UAAA,EAAE,EAAE;AAACC,YAAAA,SAAS,EAAE;AAAZ,WAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADF;AAyBD;;GA1DuBvB,qB;UAEDF,S;;;KAFCE,qB","sourcesContent":["import { AppBar, Box, Button, Container, Link, Paper, TextField, Toolbar, Typography } from '@mui/material'\nimport React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom';\nimport IRestaurante from '../../interfaces/IRestaurante';\nimport http from '../../http';\nimport { Link as RouterLink } from 'react-router-dom';\n\nexport default function FormularioRestaurante() {\n    const [nomeRestaurante, setNomeRestaurante] = useState('')\n    const parametros = useParams();\n\n    useEffect(() => {\n        if (parametros.id) {\n            http.get<IRestaurante>(`restaurantes/${parametros.id}/`)\n                .then(res => {\n                    setNomeRestaurante(res.data.nome)\n                })\n        }\n    }, [])\n\n    const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n\n        if (parametros.id) {\n            http.put(`restaurantes/${parametros.id}/`, {\n                nome: nomeRestaurante\n            })\n            .then(() => {\n                alert(\"Restaurante atualizado com sucesso!\")\n            })}\n        else {\n            http.post('restaurantes/', {\n                nome: nomeRestaurante\n            })\n            .then(() => {\n                alert(\"Restaurante cadastrado com sucesso!\")\n            })\n        }\n    }\n\n  return (\n    <>\n        <Box sx={{display:\"flex\", flexDirection:\"column\", alignItems:\"center\", flexGrow: 1}}>\n            <Typography component=\"h1\" variant=\"h6\">Formul√°rio Restaurantes</Typography>\n            <Box component=\"form\" sx={{ width: '100%' }} onSubmit={onSubmit}>\n                <TextField \n                    value={nomeRestaurante}\n                    id=\"standard-basic\" \n                    label=\"Nome do Restaurante\" \n                    variant=\"standard\" \n                    onChange={event => setNomeRestaurante(event.target.value)}\n                    fullWidth\n                    required\n                />\n                <Button \n                    type=\"submit\"\n                    variant=\"outlined\"\n                    fullWidth\n                    sx={{marginTop: 1}}>\n                    Salvar\n                </Button>\n            </Box>\n        </Box>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}